{"version":3,"sources":["Components/Participant.jsx","Components/Participants.jsx","Components/LastUpdated.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Participant","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","display","_this2","react_default","a","createElement","className","onClick","window","open","concat","name","split","toLowerCase","calculateScore","prediction","setState","key","keys","sort","map","character","src","alt","results","Component","Participants","predictions","participant","Components_Participant","scores","LastUpdated","lastUpdated","App","score","axios","get","then","response","data","catch","error","console","log","id","Components_LastUpdated","Components_Participants","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2803f15.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Participant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: false\n    };\n  }\n  render() {\n    return (\n      <div className=\"Participant\">\n        <span className=\"pdf\">\n          <i\n            onClick={() => {\n              window.open(\n                `/pdf/${this.props.name.split(\" \")[0].toLowerCase()}.pdf`\n              );\n            }}\n            className=\"far fa-file-pdf\"\n          />\n        </span>\n        <span className=\"name\">{this.props.name}</span>\n        <span className=\"score\">\n          (Score:{\" \"}\n          {this.props.calculateScore(this.props.name, this.props.prediction)}){\" \"}\n        </span>\n        <span className=\"expand\">\n          {!this.state.display ? (\n            <i\n              onClick={() => {\n                this.setState({ display: true });\n              }}\n              className=\"fas fa-angle-double-down\"\n            />\n          ) : (\n            \"\"\n          )}\n          {this.state.display ? (\n            <i\n              onClick={() => {\n                this.setState({ display: false });\n              }}\n              className=\"fas fa-angle-double-up\"\n            />\n          ) : (\n            \"\"\n          )}\n        </span>\n\n        {this.state.display ? (\n          <table>\n            <tbody>\n              <tr key={this.props.name + \"_header\"}>\n                <th>Character</th>\n                <th>Alive</th>\n                <th>Dead</th>\n                <th>White Walker</th>\n                <th>Result</th>\n                <th>Points</th>\n              </tr>\n              {Object.keys(this.props.prediction)\n                .sort()\n                .map(character => {\n                  return (\n                    <tr\n                      key={\n                        this.props.name +\n                        \"_\" +\n                        character.split(\" \")[0] +\n                        character.split(\" \")[1]\n                      }\n                    >\n                      <td>{character}</td>\n                      <td>\n                        <img\n                          className=\"statusImage\"\n                          src={\n                            this.props.prediction[character] === \"A\"\n                              ? \"./images/alive.jpg\"\n                              : \"\"\n                          }\n                          alt=\"\"\n                        />\n                        <p>\n                          {this.props.prediction[character] === \"A\"\n                            ? \"Alive\"\n                            : \"\"}\n                        </p>\n                      </td>\n                      <td>\n                        <img\n                          className=\"statusImage\"\n                          src={\n                            this.props.prediction[character] === \"D\"\n                              ? // || this.props.prediction[character] === \"W\"\n                                \"./images/dead.jpg\"\n                              : \"\"\n                          }\n                          alt=\"\"\n                        />\n                        <p>\n                          {this.props.prediction[character] === \"D\"\n                            ? // || This.props.prediction[character] === \"W\"\n                              \"Dead\"\n                            : \"\"}\n                        </p>\n                      </td>\n                      <td>\n                        <img\n                          className=\"statusImage\"\n                          src={\n                            this.props.prediction[character] === \"W\"\n                              ? \"./images/white_walker.gif\"\n                              : \"\"\n                          }\n                          alt=\"\"\n                        />\n                        <p>\n                          {this.props.prediction[character] === \"W\"\n                            ? \"White Walker\"\n                            : \"\"}\n                        </p>\n                      </td>\n                      <td>\n                        <img\n                          className=\"statusImage\"\n                          src={\n                            this.props.results[character] === \"A\"\n                              ? \"./images/alive.jpg\"\n                              : this.props.results[character] === \"D\"\n                              ? \"./images/dead.jpg\"\n                              : this.props.results[character] === \"W\"\n                              ? \"./images/white_walker.gif\"\n                              : \"\"\n                          }\n                          alt=\"\"\n                        />\n                        <p>\n                          {this.props.results[character] === \"A\"\n                            ? \"Alive\"\n                            : this.props.results[character] === \"D\"\n                            ? \"Dead\"\n                            : this.props.results[character] === \"W\"\n                            ? \"White Walker\"\n                            : \"\"}\n                        </p>\n                      </td>\n                      <td>\n                        {this.props.results[character] ===\n                        this.props.prediction[character]\n                          ? this.props.results[character] === \"A\" ||\n                            this.props.results[character] === \"D\"\n                            ? \"1\"\n                            : this.props.results[character] === \"W\"\n                            ? \"2\"\n                            : \"\"\n                          : \"0\"}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Participant;\n","import React, { Component } from \"react\";\nimport Participant from \"./Participant\";\nclass Participants extends Component {\n  render() {\n    return (\n      <div className=\"Participants\">\n        {Object.keys(this.props.predictions)\n          .sort()\n          .map(participant => {\n            return (\n              <Participant\n                key={participant}\n                prediction={this.props.predictions[participant].prediction}\n                name={participant}\n                results={this.props.results}\n                scores={this.props.scores}\n                calculateScore={this.props.calculateScore}\n              />\n            );\n          })}\n      </div>\n    );\n  }\n}\n\nexport default Participants;\n","import React, { Component } from \"react\";\n\nclass LastUpdated extends Component {\n  render() {\n    return (\n      <div className=\"LastUpdated\">\n        Last Updated on: {this.props.lastUpdated}\n      </div>\n    );\n  }\n}\n\nexport default LastUpdated;\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport Participants from \"./Components/Participants\";\nimport LastUpdated from \"./Components/LastUpdated\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastUpdated: \"April 11 : 18:50 pm\",\n      predictions: {},\n      results: {},\n      scores: {}\n    };\n  }\n  componentWillMount() {\n    axios\n      .get(\"./participants.json\")\n      .then(response => {\n        let scores = this.state.scores;\n        this.setState({ predictions: response.data });\n        Object.keys(response.data).map(participant => {\n          scores[participant] = 0;\n          this.setState({ scores });\n          return 0;\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    axios\n      .get(\"./lastUpdated.json\")\n      .then(response => {\n        this.setState({ lastUpdated: response.data[\"Last Updated\"] });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    axios\n      .get(\"./results.json\")\n      .then(response => {\n        this.setState({ results: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img id=\"logo\" src=\"./images/game-of-thrones-logo.jpg\" alt=\"\" />\n        <LastUpdated lastUpdated={this.state.lastUpdated} />\n        <br />\n        <Participants\n          predictions={this.state.predictions}\n          results={this.state.results}\n          scores={this.state.scores}\n          calculateScore={this.calculateScore}\n        />\n      </div>\n    );\n  }\n  calculateScore = (name, prediction) => {\n    let scores = this.state.scores;\n    let score = 0;\n    Object.keys(prediction).map(character => {\n      if (\n        prediction[character] === this.state.results[character] &&\n        prediction[character] === \"A\"\n      ) {\n        score += 1;\n      }\n      if (\n        prediction[character] === this.state.results[character] &&\n        prediction[character] === \"D\"\n      ) {\n        score += 1;\n      }\n      if (\n        prediction[character] === \"D\" &&\n        this.state.results[character] === \"W\"\n      ) {\n        score += 1;\n      }\n      if (\n        prediction[character] === this.state.results[character] &&\n        prediction[character] === \"W\"\n      ) {\n        score += 2;\n      }\n      return 0;\n    });\n    scores[name] = score;\n    return score;\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}